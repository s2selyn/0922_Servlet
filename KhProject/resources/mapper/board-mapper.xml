<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardMapper">

	<sql id="boardList">
		SELECT
		       BOARD_NO boardNo
		     , CATEGORY_NAME category
		     , USER_NAME boardWriter
		     , BOARD_TITLE boardTitle
		     , CREATE_DATE createDate
		     , COUNT
		  FROM
		       KH_BOARD
		  JOIN
		       KH_CATEGORY USING (CATEGORY_NO)
		  JOIN
		       KH_MEMBER ON (BOARD_WRITER = USER_NO)
		 WHERE
		       KH_BOARD.STATUS = 'Y'
	</sql>

	<select id="selectListCount"
			resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       KH_BOARD
		 WHERE
		       STATUS = 'Y'
		   AND
		       BOARD_TYPE = 1
	</select>
	
	<!--
	offset, boardLimit을 가져왔기 때문에 내가 나중에 화면에 출력해줄 데이터를 컬럼명 적어서 가지고 가면 끝
	그러므로 boardNo은 당연히 있어야 조회, 수정, 삭제 가능하니 들고가야하고
	카테고리도 들고가야함, 실제로 테이블에 들어있는 것은 숫자
	화면상에 띄워줄때는 카테고리 이름을 띄워줄것임
	보드 테이블에 들어있는 것은 카테고리 넘버, 이것을 카테고리로 외래키로 달아두었다
	카테고리 네임을 조회(select)할 때 들고갈것임
	조인해야한다
	
	유저네임 생각
	보드 테이블 작성자에 USER_NO가 들어있음(PK)
	출력할 때 1 보여주긴 그러니까 조회해갈 때 MEMBER테이블에 있는 USER_NAME을 들고가자
	이것도 조인해야함
	
	타이틀, 생성일, 조회수는 그냥 들고갈것임
	컨텐트는 없어도 되겠다, 이건 상세조회 할 때 할거니까
	
	JOIN할 때 ANSI구문의 USING과 ON의 차이, 컬럼명 동일하면 using, 다르면 on으로 작성
	지금은 둘 다 CATEGORY_NO로 컬럼명이 같다 -> USING
	
	KH_MEMBER와도 조인, 이건 컬럼명이 다름 -> ON
	
	나중에 게시글 삭제기능 구현할건데 DELETE 안하고 STATUS 컬럼값 바꿀것임
	삭제되지 않은것만 조회되게 해야함 -> WHERE 조건에 STATUS가 Y인걸 조회
	
	게시판 종류가 두개, 타입이 있음, 일반게시판은 1로 INSERT, 사진게시판은 2로 INSERT
	지금 일반게시판에 쓴것만 조회해야하니까 AND로 조건 추가해서 BOARD_TYPE = 1만 조회
	
	SELECT 하는데 정렬 안해주니까 ORDER BY 추가
	
	30개 내림차순 상태니까 특정 개수만큼 들고가기 위해서 OFFSET 추가
	pi의 오프넷 필드에 값을 담아왔음, 필드값 뽑으려면 #{offset}
	몇 개 가져갈지는 boardLimit 개수만큼
	
	BoardListController에서 출력문 써서 확인해서 발견한 문제
	member, board에도 status가 있어서 겹치므로 수정 -> KH_BOARD.STATUS = 'Y' (열의 정의가 애매)
	컬럼 별칭 없으면 매핑 안되니까 별칭 추가해야함, 변수명과 일치하는지 확인
	-->
	<select id="selectBoardList"
			parameterType="com.kh.java.common.vo.PageInfo"
			resultType="com.kh.java.board.model.vo.Board">
		<include refid="boardList" />
		   AND
		       BOARD_TYPE = 1
		 ORDER
		    BY
		       BOARD_NO DESC
		OFFSET #{offset} ROWS FETCH NEXT #{boardLimit} ROWS ONLY
	</select>
	
	<!-- 매퍼에 세미콜론 쓰면 에러납니다 -->
	<select id="selectCategory"
			resultType="com.kh.java.board.model.vo.Category">
		SELECT
		       CATEGORY_NO categoryNo
		     , CATEGORY_NAME categoryName
		  FROM
		       KH_CATEGORY
		 ORDER
		    BY
		       CATEGORY_NO ASC
	</select>
	
	<insert id="insertBoard1"
			parameterType="com.kh.java.board.model.vo.Board">
		INSERT
		  INTO
		       KH_BOARD
		       (
		       BOARD_NO
		     , BOARD_TYPE
		     , CATEGORY_NO
		     , BOARD_TITLE
		     , BOARD_CONTENT
		     , BOARD_WRITER
		       )
		VALUES
		       (
		       SEQ_BNO.NEXTVAL
		     , 1
		     , #{category}
		     , #{boardTitle}
		     , #{boardContent}
		     , #{boardWriter}
		       )
	</insert>
	
	<insert id="insertAttachment1"
			parameterType="com.kh.java.board.model.vo.Attachment">
		INSERT
		  INTO
		       KH_ATTACHMENT
		       (
		       FILE_NO
		     , REF_NO
		     , ORIGIN_NAME
		     , CHANGE_NAME
		     , FILE_PATH
		       )
		VALUES
		       (
		       SEQ_FNO.NEXTVAL
		     , SEQ_BNO.CURRVAL
		     , #{originName}
		     , #{changeName}
		     , #{filePath}
		       )
	</insert>
	
	<!--
		selectKey
		
		게시글 + 첨부파일 INSERT
		주문 + 주문상세 INSERT
		회원 + 권한 INSERT
		등 여러 테이블 연관관계, 자식-부모관계에서 외래키 사용할때 등에서 무조건 사용
		이게 마이바티스 사용하는 업계 표준(currval보다 이것을 쓴다) 
	-->
	
	<insert id="insertBoard"
			parameterType="com.kh.java.board.model.vo.Board">
		<selectKey resultType="long" keyProperty="boardNo"
				   order="BEFORE">
			SELECT SEQ_BNO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT
		  INTO
		       KH_BOARD
		       (
		       BOARD_NO
		     , BOARD_TYPE
		     , CATEGORY_NO
		     , BOARD_TITLE
		     , BOARD_CONTENT
		     , BOARD_WRITER
		       )
		VALUES
		       (
		       #{boardNo}
		     , 1
		     , #{category}
		     , #{boardTitle}
		     , #{boardContent}
		     , #{boardWriter}
		       )
	</insert>
	
	<insert id="insertAttachment"
			parameterType="com.kh.java.board.model.vo.Attachment">
		INSERT
		  INTO
		       KH_ATTACHMENT
		       (
		       FILE_NO
		     , REF_BNO
		     , ORIGIN_NAME
		     , CHANGE_NAME
		     , FILE_PATH
		       )
		VALUES
		       (
		       SEQ_FNO.NEXTVAL
		     , #{refBno}
		     , #{originName}
		     , #{changeName}
		     , #{filePath}
		       )
	</insert>
	
	<update id="increaseCount"
			parameterType="_int">
		UPDATE
		       KH_BOARD
		   SET
		       COUNT = COUNT + 1
		 WHERE
		       BOARD_NO = #{boardNo}
		   AND
		       STATUS = 'Y'
	</update>
	
	<select id="selectBoard"
			resultType="com.kh.java.board.model.vo.Board"
			parameterType="_int">
		SELECT
		       BOARD_NO boardNo
		     , USER_NAME boardWriter
		     , CATEGORY_NAME category
		     , BOARD_TITLE boardTitle
		     , BOARD_CONTENT boardContent
		  FROM
		       KH_BOARD
		  JOIN
		       KH_CATEGORY USING (CATEGORY_NO)
		  JOIN
		       KH_MEMBER ON (BOARD_WRITER = USER_NO)
		 WHERE
		       KH_BOARD.STATUS = 'Y'
		   AND
		       BOARD_NO = #{boardNo}
	</select>
	
	<select id="selectAttachment"
			resultType="com.kh.java.board.model.vo.Attachment"
			parameterType="_int">
		SELECT
		       FILE_NO fileNo
		     , ORIGIN_NAME originName
		     , CHANGE_NAME changeName
		     , FILE_PATH filePath
		  FROM
		       KH_ATTACHMENT
		 WHERE
		       STATUS = 'Y'
		   AND
		       REF_BNO = #{boardNo}
	</select>
	<!-- 여기에서 FLIE_NO를 조회해가는 이유에 대한 설명
	화면에 출력하고 싶은 내용을 조회하는건데, 출력하지도 않을 걸 왜 조회하느냐?
	이름들은 화면에 출력할것이고, 경로도 필요하니 가져갔다, 번호는 왜 가져갔을까?
	멤버 할때도 로그인시 보여줄것이 이름, 아이디같은거였고, 하지만 처음이라서 다 들고갔음
	select 할때는 특별한 이유가 있지 않는 한 웬만하면 꼭 pk를 들고간다, 그래야 수정, 삭제에 써먹을 수 있음, 이걸 조건으로 행을 식별해야함
	안들고가면 수정삭제할때 식별할 값이 없음
	만약에 지금 당장 수정삭제 만들게 아니라 pk가 필요없어서 조회를 안하고 프로젝트가 끝남,
	그래서 프로젝트가 잘돼서 인기가 많아짐, 그래서 인력이 붙어서 밀어보자 하면 자연스레 없던기능이 생김
	그럼 수정삭제 추가될수있음
	만드려고 보니 pk조회없으면 다 뜯어고쳐야하니 나중의 확장성을 생각해서라도, 지금 당장 써야하니까, 아무튼 select 할때는 무조건 pk를 들고가서 식별할수 있게 한다 -->
	
	<select id="selectBoardWriter"
			resultType="long">
		SELECT
		       BOARD_WRITER
		  FROM
		       KH_BOARD
		 WHERE
		       BOARD_NO = #{boardNo}
	</select>
	
	<update id="deleteBoard"
			parameterType="com.kh.java.board.model.vo.Board">
		UPDATE
		       KH_BOARD
		   SET
		       STATUS = 'N'
		 WHERE
		       BOARD_NO = #{boardNo}
		   AND
		       BOARD_WRITER = #{boardWriter}
	</update>
	
	<update id="deleteAttachment"
			parameterType="long">
		UPDATE
		       KH_ATTACHMENT
		   SET
		       STATUS = 'N'
		 WHERE
		       REF_BNO = #{boardNo}
	</update>
	
	<update id="updateBoard"
			parameterType="com.kh.java.board.model.vo.Board">
		UPDATE
		       KH_BOARD
		   SET
		       BOARD_TITLE = #{boardTitle}
		     , BOARD_CONTENT = #{boardContent}
		     , CATEGORY_NO = #{category}
		 WHERE
		       BOARD_NO = #{boardNo}
		   AND
		       STATUS = 'Y'
		   AND
		       BOARD_WRITER = #{boardWriter}
	</update>
	
	<update id="updateAttachment"
			parameterType="com.kh.java.board.model.vo.Attachment">
		UPDATE
		       KH_ATTACHMENT
		   SET
		       ORIGIN_NAME = #{originName}
		     , CHANGE_NAME = #{changeName}
		     , FILE_PATH = #{filePath}
		 WHERE
		       FILE_NO = #{fileNo}
	</update>
	
	<select id="searchedCount" parameterType="hashmap" resultType="_int">
		select
		       count(*)
		  from
		       kh_board
		  join
		       kh_member on (board_writer = user_no)
		 where
		       kh_board.status = 'Y'
		<if test="condition == 'content'">
		   and
		       board_content
		</if>
		<if test="condition == 'writer'">
		   and
		       user_name
		</if>
		<if test="condition == 'title'">
		   and
		       board_title
		</if>
		  like '%' || #{keyword} || '%'
	</select>
	
	<select id="selectSearchList" parameterType="hashmap"
			resultType="com.kh.java.board.model.vo.Board">
		<include refid="boardList" />
		<choose>
			<when test="condition == 'writer'">
				AND USER_NAME
			</when>
			<when test="condition == 'title'">
				AND BOARD_TITLE
			</when>
			<otherwise>
				AND BOARD_CONTENT
			</otherwise>
		</choose>
		   LIKE '%' || #{keyword} || '%'
		 ORDER
		    BY
		       BOARD_NO DESC
		OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
	</select>
	
	<insert id="insertImageBoard"
			parameterType="com.kh.java.board.model.vo.Board">
		<selectKey resultType="long" keyProperty="boardNo"
				   order="BEFORE">
			SELECT SEQ_BNO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT
		  INTO
		       KH_BOARD
		       (
		       BOARD_NO
		     , BOARD_TYPE
		     , BOARD_TITLE
		     , BOARD_CONTENT
		     , BOARD_WRITER
		       )
		VALUES
		       (
		       #{boardNo}
		     , 2
		     , #{boardTitle}
		     , #{boardContent}
		     , #{boardWriter}
		       )
	</insert>
	
	<insert id="insertAttachmentList"
			parameterType="com.kh.java.board.model.vo.Attachment">
		INSERT
		  INTO
		       KH_ATTACHMENT
		VALUES
		       (
		       SEQ_FNO.NEXTVAL
		     , #{refBno}
		     , #{originName}
		     , #{changeName}
		     , #{filePath}
		     , SYSDATE
		     , #{fileLevel}
		     , 'Y'
		       )
	</insert>
	
	<select id="selectImageList"
			resultType="com.kh.java.board.model.dto.ImageBoardDto">
		SELECT
		       BOARD_NO boardNo
		     , BOARD_TITLE boardTitle
		     , COUNT
		     , FILE_PATH filePath
		     , CHANGE_NAME changeName
		  FROM
		       KH_BOARD
		  JOIN
		       KH_ATTACHMENT ON (REF_BNO = BOARD_NO)
		 WHERE
		       BOARD_TYPE = 2
		   AND
		       KH_BOARD.STATUS = 'Y'
		 ORDER
		    BY
		       BOARD_NO DESC
	</select>

</mapper>