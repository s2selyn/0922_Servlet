DROP TABLE KH_ATTACHMENT;
DROP TABLE KH_REPLY;
DROP TABLE KH_BOARD;
DROP TABLE KH_CATEGORY;
DROP TABLE KH_NOTICE;

DROP SEQUENCE SEQ_NNO;      -- 공지사항번호 발생시킬 시퀀스
DROP SEQUENCE SEQ_BNO;      -- 게시판번호 발생시킬 시퀀스
DROP SEQUENCE SEQ_RNO;      -- 댓글번호 발생시킬 시퀀스
DROP SEQUENCE SEQ_FNO;      -- 첨부파일번호 발생시킬 시퀀스

--------------------------------------------------
--------------     NOTICE 관련	-------------------
--------------------------------------------------

CREATE TABLE KH_NOTICE(
  NOTICE_NO NUMBER PRIMARY KEY,
  NOTICE_TITLE VARCHAR2(100) NOT NULL,
  NOTICE_CONTENT VARCHAR2(4000) NOT NULL,
  NOTICE_WRITER NUMBER NOT NULL,
  COUNT NUMBER DEFAULT 0,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
  FOREIGN KEY(NOTICE_WRITER) REFERENCES KH_MEMBER(USER_NO)
);

COMMENT ON COLUMN KH_NOTICE.NOTICE_NO IS '공지사항번호';
COMMENT ON COLUMN KH_NOTICE.NOTICE_TITLE IS '공지사항제목';
COMMENT ON COLUMN KH_NOTICE.NOTICE_CONTENT IS '공지사항내용';
COMMENT ON COLUMN KH_NOTICE.NOTICE_WRITER IS '작성자회원번호';
COMMENT ON COLUMN KH_NOTICE.COUNT IS '조회수';
COMMENT ON COLUMN KH_NOTICE.CREATE_DATE IS '작성일';
COMMENT ON COLUMN KH_NOTICE.STATUS IS '상태값(Y/N)';

CREATE SEQUENCE SEQ_NNO
NOCACHE;

INSERT INTO KH_NOTICE
VALUES (SEQ_NNO.NEXTVAL, '첫번째 공지사항입니다.', '첫번째 공지사항 내용입니다.', 1, DEFAULT, '2025-09-10', DEFAULT);

INSERT INTO KH_NOTICE
VALUES (SEQ_NNO.NEXTVAL, '두번째 공지사항입니다.', '두번째 공지사항 내용입니다.', 1, DEFAULT, '2025-09-21', DEFAULT);


----------------------------------------------------
----------  CATEGORY 관련 (BOARD의 CID와 연관)  ----------	
----------------------------------------------------

CREATE TABLE KH_CATEGORY(
  CATEGORY_NO NUMBER PRIMARY KEY,
  CATEGORY_NAME VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN CATEGORY.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN CATEGORY.CATEGORY_NAME IS '카테고리명';

INSERT INTO KH_CATEGORY VALUES(10, '공통');
INSERT INTO KH_CATEGORY VALUES(20, 'Java');
INSERT INTO KH_CATEGORY VALUES(30, 'SQL');
INSERT INTO KH_CATEGORY VALUES(40, 'HTML');
INSERT INTO KH_CATEGORY VALUES(50, 'CSS');
INSERT INTO KH_CATEGORY VALUES(60, 'JavaScript');
INSERT INTO KH_CATEGORY VALUES(70, 'MyBatis');

----------------------------------------------------
----------------     BOARD 관련     -----------------
----------------------------------------------------

CREATE TABLE KH_BOARD(
  BOARD_NO NUMBER PRIMARY KEY,
  BOARD_TYPE NUMBER, -- 일반 게시판(1)이냐 사진 게시판(2)이냐
  CATEGORY_NO NUMBER,
  BOARD_TITLE VARCHAR2(100) NOT NULL,
  BOARD_CONTENT VARCHAR2(4000) NOT NULL,
  BOARD_WRITER NUMBER NOT NULL,
  COUNT NUMBER DEFAULT 0,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
  FOREIGN KEY (BOARD_WRITER) REFERENCES KH_MEMBER(USER_NO),
  FOREIGN KEY (CATEGORY_NO) REFERENCES KH_CATEGORY(CATEGORY_NO)
);

COMMENT ON COLUMN KH_BOARD.BOARD_NO IS '게시글번호';
COMMENT ON COLUMN KH_BOARD.BOARD_TYPE IS '게시글타입(일반1/사진2)';
COMMENT ON COLUMN KH_BOARD.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN KH_BOARD.BOARD_TITLE IS '게시글제목';
COMMENT ON COLUMN KH_BOARD.BOARD_CONTENT IS '게시글내용';
COMMENT ON COLUMN KH_BOARD.BOARD_WRITER IS '작성자회원번호';
COMMENT ON COLUMN KH_BOARD.COUNT IS '조회수';
COMMENT ON COLUMN KH_BOARD.CREATE_DATE IS '작성일';
COMMENT ON COLUMN KH_BOARD.STATUS IS '상태값(Y/N)';

CREATE SEQUENCE SEQ_BNO
NOCACHE;

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 10, '스프링 부트 입문하기', '스프링 부트의 기본 개념과 설정 방법에 대해 알아보겠습니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 20, 'Java 문법 학습', 'Lambda 표현식과 Stream API의 활용법을 정리했습니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 20, '프로젝트 구조 설계', 'MVC 패턴을 적용한 프로젝트 구조 설계 방법을 소개합니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 30, 'MyBatis 연동하기', 'Spring과 MyBatis를 연동하는 설정 방법을 단계별로 설명합니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 30, '데이터베이스 최적화', 'Oracle 데이터베이스 성능 최적화 기법을 정리했습니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 40, 'REST API 설계 원칙', 'RESTful API 설계 시 지켜야 할 원칙과 베스트 프랙티스입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 40, 'JavaScript ES6 문법', 'ES6에서 새로 추가된 문법들을 예제와 함께 설명합니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 50, 'Git 협업 전략', 'Git을 활용한 효율적인 협업 방법과 브랜치 전략을 소개합니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 50, 'Docker 컨테이너 활용', 'Docker를 이용한 개발 환경 구축과 배포 자동화 방법입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 60, 'AWS 클라우드 서비스', 'AWS EC2, RDS를 활용한 웹 애플리케이션 배포 가이드입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 10, 'HTML5 시맨틱 태그', 'HTML5의 시맨틱 태그를 활용한 웹 페이지 구조화 방법입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 10, 'CSS Grid 레이아웃', 'CSS Grid를 활용한 반응형 웹 디자인 구현 방법을 알아봅시다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 20, 'jQuery AJAX 통신', 'jQuery를 이용한 비동기 통신 구현과 JSON 데이터 처리 방법입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 20, 'Spring Security 설정', 'Spring Security를 이용한 인증과 권한 관리 구현 방법입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 30, 'JPA 엔티티 매핑', 'JPA를 이용한 엔티티 매핑과 연관관계 설정 방법을 설명합니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 30, 'Vue.js 컴포넌트', 'Vue.js의 컴포넌트 개념과 재사용 가능한 UI 구성 방법입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 40, 'Node.js Express 서버', 'Node.js와 Express를 이용한 웹 서버 구축 튜토리얼입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 40, 'MongoDB 데이터 모델링', 'NoSQL 데이터베이스 MongoDB의 데이터 모델링 기법을 소개합니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 50, 'React Hooks 활용', 'React Hooks를 활용한 함수형 컴포넌트 개발 방법입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 50, 'Python 데이터 분석', 'Pandas와 NumPy를 활용한 데이터 분석 기초 강의입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 10, '웹 접근성 가이드라인', '웹 접근성 준수를 위한 개발 가이드라인과 체크리스트입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 20, '디자인 패턴 정리', 'GoF 디자인 패턴 중 자주 사용되는 패턴들을 예제로 설명합니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 20, 'Linux 서버 관리', 'Linux 서버 기본 명령어와 시스템 관리 방법을 정리했습니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 30, 'CI/CD 파이프라인 구축', 'Jenkins를 이용한 지속적 통합/배포 환경 구축 가이드입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 30, '테스트 코드 작성법', 'JUnit을 활용한 단위 테스트 작성 방법과 TDD 개발 프로세스입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 40, '마이크로서비스 아키텍처', '마이크로서비스 패턴과 Spring Cloud를 활용한 구현 방법입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 40, 'Kubernetes 오케스트레이션', 'Kubernetes를 활용한 컨테이너 오케스트레이션과 배포 전략입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 50, '성능 모니터링 도구', 'APM 도구를 활용한 애플리케이션 성능 모니터링 방법입니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 50, '보안 취약점 점검', '웹 애플리케이션 보안 취약점과 대응 방안을 정리했습니다.', 1);

INSERT INTO KH_BOARD(BOARD_NO, BOARD_TYPE, CATEGORY_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_WRITER) VALUES(SEQ_BNO.NEXTVAL, 1, 10, '모바일 앱 개발 트렌드', 'Flutter와 React Native를 비교한 크로스플랫폼 개발 가이드입니다.', 1);



----------------------------------------------------
---------------     REPLY 관련    -------------------	
----------------------------------------------------

CREATE TABLE KH_REPLY(
  REPLY_NO NUMBER PRIMARY KEY,
  REPLY_CONTENT VARCHAR2(400) NOT NULL,
  REF_BNO NUMBER NOT NULL,
  REPLY_WRITER NUMBER NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
  FOREIGN KEY (REF_BNO) REFERENCES KH_BOARD(BOARD_NO),
  FOREIGN KEY (REPLY_WRITER) REFERENCES KH_MEMBER(USER_NO)
);

COMMENT ON COLUMN KH_REPLY.REPLY_NO IS '댓글번호';
COMMENT ON COLUMN KH_REPLY.REPLY_CONTENT IS '댓글내용';
COMMENT ON COLUMN KH_REPLY.REF_BNO IS '참조하는게시글번호';
COMMENT ON COLUMN KH_REPLY.REPLY_WRITER IS '작성자회원번호';
COMMENT ON COLUMN KH_REPLY.CREATE_DATE IS '작성일';
COMMENT ON COLUMN KH_REPLY.STATUS IS '상태값(Y/N)';

CREATE SEQUENCE SEQ_RNO
NOCACHE;

----------------------------------------------------
--------------     ATTACHMENT 관련             --------------	
----------------------------------------------------

CREATE TABLE KH_ATTACHMENT (
  FILE_NO NUMBER PRIMARY KEY,
  REF_BNO NUMBER NOT NULL,
  ORIGIN_NAME VARCHAR2(255) NOT NULL,
  CHANGE_NAME VARCHAR2(255) NOT NULL,
  FILE_PATH VARCHAR2(1000),
  UPLOAD_DATE DATE DEFAULT SYSDATE NOT NULL,
  FILE_LEVEL NUMBER,
  STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N')),
  FOREIGN KEY (REF_BNO) REFERENCES KH_BOARD(BOARD_NO)
);

COMMENT ON COLUMN KH_ATTACHMENT.FILE_NO IS '파일번호';
COMMENT ON COLUMN KH_ATTACHMENT.REF_BNO IS '참조게시글번호';
COMMENT ON COLUMN KH_ATTACHMENT.ORIGIN_NAME IS '파일원본명';
COMMENT ON COLUMN KH_ATTACHMENT.CHANGE_NAME IS '파일수정명';
COMMENT ON COLUMN KH_ATTACHMENT.FILE_PATH IS '저장폴더경로';
COMMENT ON COLUMN KH_ATTACHMENT.UPLOAD_DATE IS '업로드일';
COMMENT ON COLUMN KH_ATTACHMENT.FILE_LEVEL IS '파일레벨(1/2)';

CREATE SEQUENCE SEQ_FNO
NOCACHE;

COMMIT;


SELECT * FROM KH_BOARD ORDER BY BOARD_NO DESC;

SELECT RNUM, BOARD_NO, BOARD_TITLE FROM (
SELECT ROWNUM RNUM, BOARD_NO, BOARD_TITLE
  FROM (
SELECT BOARD_NO, BOARD_TITLE FROM KH_BOARD ORDER BY BOARD_NO DESC
       ))
 WHERE
       RNUM BETWEEN 20 AND 30;

SELECT *
  FROM KH_BOARD
 ORDER BY BOARD_NO DESC
OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY;

SELECT * FROM KH_CATEGORY;
SELECT * FROM KH_MEMBER;